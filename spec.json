{
  "nio/IntercomNewMessages": {
    "Version": "0.1.0",
    "Description": "Publishes a signal for each new conversation created in Intercom. When the block starts up, it creates a local web server and endpoint to receive the messages from nio. It also creates a webhook in Intercom that is configured to send to your callback url. When the block stops, it delete the webhook from Intercom.",
    "Output": "https://developers.intercom.com/v2.0/reference#notification-model",
    "Input": "None",
    "Dependencies": [
      "requests"
    ],
    "Properties": {
      "callback_url": {
        "description": "Your publicly accessible url that Intercom can POST notifications to."
      },
      "access_token": {
        "description": "Your Intercom Access Token. You will need to request an [extended scope](https://developers.intercom.com/docs/personal-access-tokens#section-extended-scopes) token from Intercom."
      }, 
      "web_server": {
       "description": "Host, Port and Endpoint to launch your webserver where Intercom will POST notifications to."
      }
    }
  },
  "nio/IntercomTagUsers": {
    "Version": "0.1.0",
    "Description": "Sends HTTP request to Intercom to apply a tag to a user.",
    "Output": "None",
    "Input": "Signal containing user info",
    "Dependencies": [
      "requests"
    ],
    "Properties": {
      "tag_name": {
        "description": "The name of the tag that will be applied to the user."
      },
      "access_token": {
        "description": "Your Intercom Access Token. You will need to request an [extended scope](https://developers.intercom.com/docs/personal-access-tokens#section-extended-scopes) token from Intercom."
      },
      "user_info": {
       "description": "Email address or user_id of the Intercom user to be tagged."
      }
    }
  }
}
